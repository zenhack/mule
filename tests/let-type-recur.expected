
Desugared:

	(let-type
	 ((int-list
	   ((lam $0
	     (rec int-list
	      (union
	       ((Cons (record (types ()) (values ((tl int-list) (hd $0)))))
	        (Nil (record (types ()) (values ())))))))
	    int)))
	 ((: int-list)
	  ((fn x (Cons x))
	   (fix/record
	    (fn $1 (((.= hd) (((.= tl) {}) ((fn x (Nil x)) {}))) (Integer 4)))))))

inferred type:

	(rec a
	 (union
	  ((Cons (record (types ()) (values ((hd int) (tl a)))))
	   (Nil (record (types ()) (values ()))))))

Runtime term:

	(App
	 ((Lam (0 () (Ctor (Cons (Var 0)))))
	  (App
	   ((Fix Record)
	    (Lam
	     (0 ()
	      (Record
	       ((hd (Const (Integer 4)))
	        (tl (App ((Lam (0 () (Ctor (Nil (Var 0))))) (Record ()))))))))))))

Evaluated:

	(Ctor
	 (Cons (Record ((hd (Const (Integer 4))) (tl (Ctor (Nil (Record ()))))))))
