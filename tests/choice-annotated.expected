
Desugared:

	(fn choice
	 (let (choice (: choice (all a (a -> (a -> a)))))
	  (record (types ())
	   (values
	    ((x
	      ((choice (record (types ()) (values ())))
	       (record (types ()) (values ()))))
	     (y ((choice (fn x x)) (fn x x))))))))

inferred type:

	((all a (a -> (a -> a))) ->
	 (record (types ((... (all b b))))
	  (values
	   ((y (all c (c -> c)))
	    (x (record (types ((... (all b b)))) (values ((... (exist d d))))))
	    (... (exist d d))))))

Runtime term:

	(Lam
	 (0 ()
	  (App
	   ((Lam
	     (0 ()
	      (LetRec
	       (((3 (App ((App ((Var 2) (Record ()))) (Record ()))))
	         (3
	          (App ((App ((Var 2) (Lam (0 () (Var 0))))) (Lam (0 () (Var 0)))))))
	        (Record ((x (Var 0)) (y (Var 1))))))))
	    (Var 0)))))

Evaluated:

	(Lam
	 (0 ()
	  (App
	   ((Lam
	     (0 ()
	      (LetRec
	       (((3 (App ((App ((Var 2) (Record ()))) (Record ()))))
	         (3
	          (App ((App ((Var 2) (Lam (0 () (Var 0))))) (Lam (0 () (Var 0)))))))
	        (Record ((x (Var 0)) (y (Var 1))))))))
	    (Var 0)))))
