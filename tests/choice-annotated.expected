
Desugared:

	(fn choice
	 (let (choice (: choice (all a (a -> (a -> a)))))
	  (letrec (types ())
	   (values ((x ((choice {}) {})) (y ((choice (fn x x)) (fn x x)))))
	   (((.= x) (((.= y) {}) y)) x))))

inferred type:

	((all a (a -> (a -> a))) ->
	 (record (types ())
	  (values ((x (record (types ()) (values ()))) (y (all b (b -> b)))))))

Runtime term:

	(Lam
	 (0 ()
	  (App
	   ((Lam
	     (0 ()
	      (LetRec
	       (((3 (App ((App ((Var 2) (Record ()))) (Record ()))))
	         (3
	          (App ((App ((Var 2) (Lam (0 () (Var 0))))) (Lam (0 () (Var 0)))))))
	        (App
	         ((App
	           ((Lam
	             (0 ()
	              (Lam (1 () (Update (old (Var 1)) (label x) (field (Var 0)))))))
	            (App
	             ((App
	               ((Lam
	                 (0 ()
	                  (Lam
	                   (1 () (Update (old (Var 1)) (label y) (field (Var 0)))))))
	                (Record ())))
	              (Var 1)))))
	          (Var 0)))))))
	    (Var 0)))))

Evaluated:

	(Lam
	 (0 ()
	  (App
	   ((Lam
	     (0 ()
	      (LetRec
	       (((3 (App ((App ((Var 2) (Record ()))) (Record ()))))
	         (3
	          (App ((App ((Var 2) (Lam (0 () (Var 0))))) (Lam (0 () (Var 0)))))))
	        (App
	         ((App
	           ((Lam
	             (0 ()
	              (Lam (1 () (Update (old (Var 1)) (label x) (field (Var 0)))))))
	            (App
	             ((App
	               ((Lam
	                 (0 ()
	                  (Lam
	                   (1 () (Update (old (Var 1)) (label y) (field (Var 0)))))))
	                (Record ())))
	              (Var 1)))))
	          (Var 0)))))))
	    (Var 0)))))
