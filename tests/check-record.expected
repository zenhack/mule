
Desugared:

	(:
	 (record
	  (types
	   (((t
	      (lam a
	       (rec t
	        (union
	         ((Cons (record (types ()) (values ((tl t) (hd a)))))
	          (Nil (record (types ()) (values ())))))))))))
	  (values
	   ((empty?
	     (fn list
	      ((match
	        ((Cons (_ ((fn x (False x)) (record (types ()) (values ())))))
	         (Nil (_ ((fn x (True x)) (record (types ()) (values ())))))))
	       list))))))
	 (exist $12
	  (record (types ((t $12)))
	   (values
	    ((empty?
	      (all a
	       (($12 a) ->
	        (union
	         ((True (record (types ()) (values ())))
	          (False (record (types ()) (values ())))))))))))))

inferred type:

	(exist a
	 (record (types ((t a)))
	  (values
	   ((empty?
	     (all b
	      ((a b) ->
	       (union
	        ((True (record (types ()) (values ())))
	         (False (record (types ()) (values ()))))))))))))

Runtime term:

	(LetRec
	 (((0
	    (Lam
	     (0 ()
	      (App
	       ((Match
	         (BLabel
	          (lm_cases
	           ((Cons
	             (BLeaf
	              (Lam
	               (0 () (App ((Lam (0 () (Ctor (False (Var 0))))) (Record ())))))))
	            (Nil
	             (BLeaf
	              (Lam
	               (0 () (App ((Lam (0 () (Ctor (True (Var 0))))) (Record ())))))))))
	          (lm_default ())))
	        (Var 0)))))))
	  (Record ((empty? (Var 0))))))

Evaluated:

	(Record
	 ((empty?
	   (Lam
	    (0 ()
	     (App
	      ((Match
	        (BLabel
	         (lm_cases
	          ((Cons
	            (BLeaf
	             (Lam
	              (0 () (App ((Lam (0 () (Ctor (False (Var 0))))) (Record ())))))))
	           (Nil
	            (BLeaf
	             (Lam
	              (0 () (App ((Lam (0 () (Ctor (True (Var 0))))) (Record ())))))))))
	         (lm_default ())))
	       (Var 0))))))))
